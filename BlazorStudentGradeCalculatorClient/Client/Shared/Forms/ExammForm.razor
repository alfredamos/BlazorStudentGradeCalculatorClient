

<EditForm Model="Examm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="SubjectName" class="form-label">Subject Name</label>
        <InputText @bind-Value="Examm.SubjectName" class="form-control" placeholder="Subject Name" />
        <ValidationMessage For="@(() => Examm.SubjectName)" />
    </div>
    <div class="form-group">
        <label for="SubjectScore" class="form-label">Subject Score</label>
        <InputNumber @bind-Value="Examm.SubjectScore" class="form-control" placeholder="Subject Score" />
        <ValidationMessage For="@(() => Examm.SubjectScore)" />
    </div>



    @if (!HideButton)
    {
        <div class="form-group">
            <button type="button" class="btn btn-outline-info" @onclick="Proceed" style="font-weight: bold">Proceed</button>
            <button type="button" class="btn btn-outline-info" @onclick="Finish" style="font-weight: bold">Cancel</button>
        </div>
    }
    @if (HideButton)
    {
        <div class="form-group">
            <button type="button" class="btn btn-outline-info" @onclick="UpsertExamm" style="font-weight: bold">@UpsertButton</button>
            <button type="button" class="btn btn-outline-info" @onclick="CancelMethod" style="font-weight: bold">@CancelButton</button>
        </div>
    }

</EditForm>


@code {
    [Parameter]
    public ExammView Examm { get; set; }
  
    [Parameter]
    public EventCallback Proceed { get; set; }

    [Parameter]
    public EventCallback Finish { get; set; }

    [Parameter]
    public EventCallback UpsertExamm { get; set; }

    [Parameter]
    public EventCallback CancelMethod { get; set; }

    [Parameter]
    public string UpsertButton { get; set; }

    [Parameter]
    public string CancelButton { get; set; }

    [Parameter]
    public bool HideButton { get; set; } = false;

    public bool ShowForm { get; set; } = true;
   
}
